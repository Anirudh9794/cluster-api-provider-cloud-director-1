apiVersion: cluster.x-k8s.io/v1alpha4
kind: Cluster
metadata:
  name: capi-cluster # cluster name
  namespace: default # kubernetes namespace in which the cluster should be deployed
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16 # pod CIDR for the cluster
    serviceDomain: k8s.test
    services:
      cidrBlocks:
      - 10.96.0.0/12 # service CIDR for the cluster
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
    kind: KubeadmControlPlane
    name: capi-control-plane # name of the KubeadmControlPlane object associated with the cluster.
    namespace: default # kubernetes namespace in which the KubeadmControlPlane object reside. Ideally should be the same namespace as that of the Cluster object
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
    kind: VCDCluster
    name: capi-cluster # name of the VCDCluster object associated with the cluster.
    namespace: default # kubernetes namespace in which the VCDCluster object. Ideally should be the same namespace as that of the Cluster object
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: VCDCluster
metadata:
  name: capi-cluster # name of the VCDCluster object. It is Recommended to keep the VCDCluster object name to match the Cluster object name to avoid confusion.
  namespace: default # kubernetes namespace in which the VCDCluster object will be created. Ideally should be the same namespace as that of the Cluster object
spec:
  site: https://bos1-vcloud-static-170-210.eng.vmware.com # VCD endpoint with the format https://VCD_HOST. No trailing '/'
  org: test_org # VCD organization name where the cluster should be deployed
  ovdc: test_orgvdc # VCD virtual datacenter name where the cluster should be deployed
  ovdcNetwork: test_orgvdc_net # VCD virtual datacenter network to be used by the cluster
  userContext:
    username: user_admin # username of the VCD persona creating the cluster
    password: vmware # password associated with the user creating the cluster
    refreshToken: "" # refresh token of the client registered with VCD for creating clusters. username and password can be left blank if refresh token is provided
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: VCDMachineTemplate
metadata:
  name: capi-control-plane # name of the VCDMachineTemplate object associated with the control plane node. Ideally should be the same as the name of the KubeadmControlPlane object
  namespace: default # kubernetes namespace in which the VCDMachineTemplate object should be created. Ideally should be the same namespace as that of the Cluster object
spec:
  template:
    spec:
      catalog: cse-cat # catalog which contains the TKGm OVA used to deploy the control plane nodes
      template: ubuntu-2004-kube-v1.20.8+vmware.1-tkg.1-17589475007677388652 # name of the VCD template used to create the control plane nodes
      computePolicy: 2core2gb # compute policy used to create the control plane VMs
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
kind: KubeadmControlPlane
metadata:
  name: capi-control-plane # name of the KubeadmControlPlane object
  namespace: default # kubernetes namespace in which the KubeadmControlPlane object should be created. Ideally should be the same namespace as that of the Cluster object
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        certSANs:
        - localhost
        - 127.0.0.1
      controllerManager:
        extraArgs:
          enable-hostpath-provisioner: "true"
      dns:
        imageRepository: projects.registry.vmware.com/tkg # image repository to pull the DNS image from
        imageTag: v1.7.0-vmware.12 # DNS image tag associated with the TKGm OVA used
      etcd:
        local:
          imageRepository: projects.registry.vmware.com/tkg # image repository to pull the etcd image from
          imageTag: v3.4.13-vmware.14 # etcd image tag associated with the TKGm OVA used
      imageRepository: projects.registry.vmware.com/tkg # image repository to use for the rest of kubernetes images
    users:
    - name: root
      sshAuthorizedKeys:
      - "ssh-key" # ssh public key to log in to the control plane VMs in VCD
    initConfiguration:
      nodeRegistration:
        criSocket: /run/containerd/containerd.sock
        kubeletExtraArgs:
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        criSocket: /run/containerd/containerd.sock
        kubeletExtraArgs:
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          cloud-provider: external
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
      kind: VCDMachineTemplate
      name: capi-control-plane # name of the VCDMachineTemplate object used to deploy control plane VMs. Ideally should be the same name as that of KubeadmControlPlane object
      namespace: default # kubernetes namespace of the VCDMachineTemplate object. Ideally should be the same namespace as that of the Cluster object
  replicas: 1 # desired number of control plane nodes for the cluster
  version: v1.20.8-vmware.1 # kubernetes version used by the control plane nodes
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: VCDMachineTemplate
metadata:
  name: capi-md0 # name of the VCDMachineTemplate object. Ideally should be the same as the name of MachineDeployment object.
  namespace: default  # kubernetes namespace in which the VCDMachineTemplate object will be created. Ideally should be the same namespace as that of the Cluster object
spec:
  template:
    spec:
      catalog: cse-cat # catalog which contains the TKGm OVA used to deploy the worker nodes
      template: ubuntu-2004-kube-v1.20.8+vmware.1-tkg.1-17589475007677388652 # name of the VCD template used to create the worker nodes
      computePolicy: "" # compute policy used to create the worker VMs
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha4
kind: KubeadmConfigTemplate
metadata:
  name: capi-md0 # name of the KubeadmConfigTemplate object. Ideally should be the same name as that of MachineDeployment object
  namespace: default # kubernetes namespace in which the KubeadmConfigTemplate object should be created. Ideally should be the same namespace as that of the Cluster object
spec:
  template:
    spec:
      users:
      - name: root
        sshAuthorizedKeys:
        - "ssh-key" # ssh public key to log in to the worker VMs in VCD
      joinConfiguration:
        nodeRegistration:
          criSocket: /run/containerd/containerd.sock
          kubeletExtraArgs:
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
            cloud-provider: external
---
apiVersion: cluster.x-k8s.io/v1alpha4
kind: MachineDeployment
metadata:
  name: capi-md0 # name of the MachineDeployment object.
  namespace: default # kubernetes namespace in which the MachineDeployment object should be created. Ideally should be the same namespace as that of the Cluster object
spec:
  clusterName: capi-cluster # name of the Cluster object
  replicas: 1 # desired number of worker nodes for the cluster
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha4
          kind: KubeadmConfigTemplate
          name: capi-md0 # name of the KubeadmConfigTemplate object
          namespace: default # kubernetes namespace of the KubeadmConfigTemplate object. Ideally should be the same namespace as that of the Cluster object
      clusterName: capi-cluster # name of the Cluster object
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
        kind: VCDMachineTemplate
        name: capi-md0 # name of the VCDMachineTemplate object used to deploy worker nodes
        namespace: default # kubernetes namespace of the VCDMachineTemplate object used to deploy worker nodes
      version: v1.20.8-vmware.1 # kubernetes version used by the worker nodes
